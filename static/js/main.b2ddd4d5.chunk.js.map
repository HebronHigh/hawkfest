{"version":3,"sources":["components/Map.jsx","assets/WhiteOutlineLogo.png","components/Navbar.jsx","components/About.jsx","components/Contact.jsx","components/InfoLink.jsx","components/TextInfo.jsx","components/PortraitImage.jsx","components/Contributor.jsx","components/Credit.jsx","App.js","fonts/Ultrathins.ttf","fonts/leaves_and_ground.ttf","index.js"],"names":["highlight","e","layer","target","setStyle","fillOpacity","feature","properties","HASDATA","weight","bringToFront","resetHighlight","fillColor","getColors","REGION","Map","onEachCountry","country","bindPopup","url","ADMIN","on","mouseover","mouseout","MapContainer","style","height","minZoom","maxZoom","zoom","center","maxBounds","latLngBounds","latLng","maxBoundsViscosity","TileLayer","attribution","GeoJSON","color","data","features","onEachFeature","this","Component","Navbar","className","to","href","src","logo","alt","activeClassName","About","Contact","InfoLink","props","user","type","link","rel","width","size","TextInfo","mailto","phone","ImagePortait","path","location","process","Contributor","imageSource","name","phonenumber","personalemail","workemail","githubName","linkedinName","website","instagramName","Credit","App","exact","component","ReactGA","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2ddd4d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { MapContainer, GeoJSON, TileLayer } from 'react-leaflet'\r\nimport data from './../data/countries.json'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport './Map.css'\r\nimport { latLng, latLngBounds } from 'leaflet';\r\n\r\n/*\r\n  REGION NUMBERS GUIDE:\r\n  0: Southwest Asia & Northern Africa\r\n  1: Sub-Saharan Africa & Australia\r\n  2: Not Monsoon Asia\r\n  3: Europe & Russia\r\n  4: Western Hemisphere\r\n*/\r\n\r\n/**\r\n * Highlights a layer that was hovered over in the map\r\n *\r\n * @param {*} e the object that was hovered over\r\n *\r\n * @author Ethan Maher\r\n */\r\nfunction highlight(e) {\r\n  const layer = e.target;\r\n  layer.setStyle({\r\n    fillOpacity: e.target.feature.properties.HASDATA === 0 ? .9 : .7,\r\n    weight: 3,\r\n  })\r\n  layer.bringToFront();\r\n}\r\n\r\n/**\r\n * Unhighlights a layer that is no longer hovered over based on the region that layer is in (determined in JSON properties)\r\n *\r\n * @param {*} e the object that was stopped being hovered over\r\n *\r\n * @author Ethan Maher\r\n */\r\nfunction resetHighlight(e) {\r\n  const layer = e.target;\r\n  layer.setStyle({\r\n    weight: 1.5,\r\n    fillColor: getColors(layer.feature),\r\n    fillOpacity: e.target.feature.properties.HASDATA === 0 ? .8 : .5,\r\n  })\r\n}\r\n\r\n/**\r\n * Returns the correct color of a layer from the REGION property in the JSON\r\n *\r\n * @param {*} layer the layer to get the original color of\r\n * @returns the color that the layer needs to be\r\n *\r\n * @author Ethan Maher\r\n */\r\nfunction getColors(feature) {\r\n  const regionNumber = feature.properties.REGION;\r\n  switch (regionNumber) {\r\n    case 0: return '#ffff00';\r\n    case 1: return '#ff0000';\r\n    case 2: return '#00ff00';\r\n    case 3: return '#00ffff';\r\n    case 4: return '#0000ff';\r\n    default: return '#000000';\r\n  }\r\n}\r\n\r\n/**\r\n * Class for Map component\r\n *\r\n * @author Ethan Maher\r\n */\r\nclass Map extends Component {\r\n  onEachCountry = (country, layer) => {\r\n\r\n    if (country.properties.HASDATA === 1) {\r\n      layer.bindPopup(function () {\r\n        const url = \"/hawkfest/pages/\" + country.properties.ADMIN + \"/General%20Info.html\"\r\n        return \"<p>\" + country.properties.ADMIN + \"</p><a href=\" + url + \" id='viewmorebutton'>View Country Page</a>\";\r\n      })\r\n    } else {\r\n      layer.bindPopup(function () {\r\n        return \"<p>\" + country.properties.ADMIN + \"</p>\";\r\n      })\r\n    }\r\n\r\n    layer.on({\r\n      mouseover: highlight,\r\n      mouseout: resetHighlight\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n         <MapContainer style={{ height: \"90vh\" }} minZoom={2} maxZoom={7} zoom={2} center={[12.345, 12.345]} maxBounds={latLngBounds(latLng(-90,-200),latLng(90,200))} maxBoundsViscosity={1.0}>\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <GeoJSON\r\n              style={\r\n              function (feature) {\r\n                  return {\r\n                    fillColor: getColors(feature),\r\n                    weight: 1.5,\r\n                    fillOpacity: feature.properties.HASDATA === 0 ? .8 : .5,\r\n                    color: 'black',\r\n                  }\r\n                }\r\n              }\r\n              data={data.features}\r\n              onEachFeature={this.onEachCountry}\r\n            />\r\n          </MapContainer>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map","export default __webpack_public_path__ + \"static/media/WhiteOutlineLogo.2d69263f.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport logo from '../assets/WhiteOutlineLogo.png'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='container'>\r\n    <div className='child-left'>\r\n        <NavLink to='/hawkfest' className='nav_link_img'>\r\n          <a href='/hawkfest'>\r\n            <img src={logo} alt=''></img>\r\n          </a>\r\n        </NavLink>\r\n        <span>HawkFest2021</span>\r\n    </div>\r\n      <div className='child-right'>\r\n        <NavLink to='/hawkfest' className='nav_link' activeClassName='selected'> Map </NavLink>\r\n        <NavLink to='/hawkfest/about' className='nav_link' activeClassName='selected'> About </NavLink>\r\n        <NavLink to='/hawkfest/contact' className='nav_link' activeClassName='selected'> Contact </NavLink>\r\n        <NavLink to='/hawkfest/credit' className='nav_link' activeClassName='selected'> Credit </NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div className='header'><h1> ABOUT </h1></div>\r\n      <div className='contactContainer'>\r\n        <p>\r\n          ABOUT INFO HERE\r\n        </p>\r\n      </div>\r\n    </>\r\n\t);\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n      <div className='header'><h1> CONTACT </h1></div>\r\n      <div className='contactContainer'>\r\n        <p>\r\n          CONTACT INFO HERH\r\n        </p>\r\n      </div>\r\n    </>\r\n\t);\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport './InfoLink.css'\nimport { Github, Instagram, Linkedin, Globe2 } from 'react-bootstrap-icons'\n\n/**\n * InfoLink functional component for the Credit Page\n * currently supports\n *   * github\n *   * linkedin\n *   * instagram\n *\n * @param {*} props the prop passed for the InfoLink\n * @returns href using a react-bootstrap icon for the media\n *\n * @author Ethan Maher\n */\nconst InfoLink = (props) => {\n  if (typeof (props.user) !== 'undefined') {\n\n    /**\n     * checks if the proptype is a github username\n     *\n     * if so it will create a link to that github page\n     */\n    if (props.type === 'github') {\n      const link = 'https://github.com/' + props.user;\n      return (\n        <a href={link} target='_blank' rel='noreferrer'>\n          <Github width='40px' size={30} />\n        </a>\n      )\n    }\n    /**\n     * checks if the proptype is a linkedin username\n     *\n     * if so it will create a link to that linkedin page\n     */\n    else if (props.type === 'linkedin') {\n      const link = 'https://www.linkedin.com/in/' + props.user;\n      return (\n        <a href={link} target='_blank' rel='noreferrer'>\n          <Linkedin width='40px' size={30} />\n        </a>\n      )\n    }\n    /**\n     * checks if the proptype is a website\n     *\n     * if so it will create a link to that webpage\n     */\n    else if (props.type === 'website') {\n      const link = props.user;\n\n      return (\n        <a href={link} target='_blank' rel='noreferrer'>\n          <Globe2 width='40px' size={30} />\n        </a>\n      )\n    }\n    /**\n     * checks if the proptype is an instagram username\n     *\n     * if so it will create a link to that instagram page\n     */\n    else if (props.type === 'instagram') {\n      const link = 'https://www.instagram.com/' + props.user;\n      return (\n        <a href={link} target='_blank' rel='noreferrer'>\n          <Instagram width='40px' size={30} />\n        </a>\n      )\n    }\n\n    /**\n     * to add a new prop\n     */\n  } else {\n    return null;\n  }\n}\n\nexport default InfoLink;","import React from 'react';\nimport './TextInfo.css'\n\n/**\n * TextInfo functional component for the Credit Page\n * currently has info for\n *   * personal email\n *   * business email\n *   * phone number\n *\n * @param {*} props the prop passed for the TextInfo\n * @returns html for the given prop\n *\n * @author Ethan Maher\n */\nconst TextInfo = (props) => {\n  if (typeof (props.user) !== 'undefined') {\n    /**\n     * checks if the prop type is a personal email\n     *\n     * if so it will check the email service provided and add the extension\n     */\n    if (props.type === 'personalemail') {\n      const user = props.user;\n\n\n      /**\n       * creates and returns a mailto: href with the email\n       */\n      const mailto = 'mailto:' + user\n      return (\n        <div className='item'>Personal Email: <a href={mailto}>{user}</a></div>\n      )\n    }\n    /**\n     * checks if the prop type is a work email\n     *\n     * if so it will check the email service provided and add the extension\n     */\n    else if (props.type === 'workemail') {\n      const user = props.user;\n\n      /**\n       * creates and returns a mailto: href with the email\n       */\n      const mailto = 'mailto:' + user\n      return (\n        <div className='item'>Business Email: <a href={mailto}>{user}</a></div>\n      )\n    }\n    /**\n     * checks if the prop type is a phone number\n     *\n     * if so it will return an item div\n     */\n    else if (props.type === 'phonenumber') {\n      const phone = props.user\n      return (\n        <div className='item'>Phone Number: {phone}</div>\n      )\n    }\n  } else {\n    return null;\n  }\n}\n\nexport default TextInfo;","import React from 'react';\nimport './PortraitImage.css'\n\nconst ImagePortait = (props) => {\n  const path = props.location;\n  return (\n    <img className='profilepicture' src={process.env.PUBLIC_URL + path} alt=''></img>\n  )\n}\n\nexport default ImagePortait;","import React from 'react';\nimport InfoLink from './InfoLink'\nimport TextInfo from './TextInfo'\nimport PortraitImage from './PortraitImage'\nimport './Contributor.css'\n\nconst Contributor = (props) => {\n\n  /**\n   * for textinfo and infolinks make sure you change the user prop\n   * currently they check if user is undefined to add something\n   */\n  return (\n    <div className = 'contribContainer'>\n      <div className='photo'>\n        <PortraitImage location={props.imageSource} />\n      </div>\n\n      <div className='info'>\n        <div className='userinfo-name'>\n          {props.name}\n        </div>\n\n        <div className='textinfo'>\n          <TextInfo type='phonenumber' user={props.phonenumber} />\n          <TextInfo type='personalemail' user={props.personalemail}/>\n          <TextInfo type='workemail' user={props.workemail}/>\n        </div>\n\n        <div className='infolinks'>\n          <InfoLink type='github' user={props.githubName} />\n          <InfoLink type='linkedin' user={props.linkedinName} />\n          <InfoLink type='website' user={props.website} />\n          <InfoLink type='instagram' user={props.instagramName} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Contributor;","import React from 'react';\r\nimport Contributor from './Contributor'\r\nimport './Credit.css'\r\nconst Credit = () => {\r\n  return (\r\n    <>\r\n      <div className='header'><h1> CREDIT </h1></div>\r\n      <div className='creditsContainer'>\r\n          <div className='contributor'>\r\n            <Contributor\r\n              name='Ethan Maher'\r\n              imageSource='/img/saitama.jpg'\r\n              githubName='randompwner'\r\n              linkedinName='ethan-maher'\r\n              personalemail='ethanamaher@gmail.com'\r\n              workemail='eam200004@utdallas.edu'\r\n              website = 'https://randompwner.github.io'\r\n            />\r\n          </div>\r\n\r\n          <div className='contributor'>\r\n            <Contributor\r\n              name='Matthew Sheldon'\r\n              imageSource='/img/saitama.jpg'\r\n              githubName='Punchwood2003'\r\n              linkedinName='matthew-sheldon-280812200'\r\n              personalemail='punchwood2003@gmail.com'\r\n              workemail='matthewtsheldon@gmail.com'\r\n            />\r\n          </div>\r\n\r\n          <div className='contributor'>\r\n            <Contributor\r\n              name='Tyler Kerch'\r\n              imageSource='/img/saitama.jpg'\r\n            />\r\n          </div>\r\n\r\n          <div className='contributor'>\r\n            <Contributor\r\n              name='Janine Jimenez'\r\n              imageSource='/img/saitama.jpg'\r\n              githubName='jsjimenezdotcom'\r\n              linkedinName='janine-jimenez-172152201'\r\n              workemail='jimenezj2@go.lisd.net'\r\n            />\r\n          </div>\r\n\r\n          <div className='contributor'>\r\n            <Contributor\r\n              name='Rayyan Waris'\r\n              imageSource='/img/saitama.jpg'\r\n              linkedinName='rayyan-waris-b6821020b'\r\n              instagramName='raywa04'\r\n              workemail='warisr@go.lisd.net'\r\n            />\r\n          </div>\r\n\r\n          <div className='contributor'>\r\n            <Contributor\r\n              name='Sanjitha Venkata'\r\n            imageSource='/img/saitama.jpg'\r\n            linkedinName='sanjitha-venkata-843404209'\r\n            personalemail='sanjithavv@gmail.com'\r\n            />\r\n          </div>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Credit;","import './App.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Map from './components/Map'\r\nimport React from 'react'\r\nimport ReactGA from 'react-ga';\r\nimport Navbar from './components/Navbar'\r\nimport About from './components/About'\r\nimport Contact from './components/Contact'\r\nimport Credit from './components/Credit'\r\n\r\nReactGA.initialize('UA-193267831-1')\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <div>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/hawkfest' component={Map} />\r\n            <Route exact path='/hawkfest/about' component={About} />\r\n            <Route exact path='/hawkfest/contact' component={Contact} />\r\n            <Route exact path='/hawkfest/credit' component={Credit} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Ultrathins.d160c85c.ttf\";","export default __webpack_public_path__ + \"static/media/leaves_and_ground.d7e8068f.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './fonts/Ultrathins.ttf'\r\nimport './fonts/leaves_and_ground.ttf'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}